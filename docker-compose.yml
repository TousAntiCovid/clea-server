version: "3.8"
services:
  clea-ws-rest:
    image: clea-ws-rest
    build: clea-ws-rest
    environment:
      SPRING_PROFILES_ACTIVE: dev,docker
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      CLEA_CONF_AUTHORIZATION_CHECK_ACTIVE: "false"
      CLEA_WS_REST_LOG_FILE_PATH: /logs
      CLEA_WS_REST_LOG_FILE_NAME: clea-ws-rest
    depends_on:
      - kafka
    ports:
      - "8080:8080"

  clea-venue-consumer:
    image: clea-venue-consumer
    build: clea-venue-consumer
    environment:
      SPRING_PROFILES_ACTIVE: dev,docker
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      CLEA_VENUE_CONSUMER_LOG_FILE_PATH: /logs
      CLEA_VENUE_CONSUMER_LOG_FILE_NAME: clea-venue-consumer
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cleadb
      SPRING_DATASOURCE_USERNAME: username
      SPRING_DATASOURCE_PASSWORD: password
    depends_on:
      - postgres
      - kafka
      - elasticsearch
    ports:
      - "7070:8080"

  clea-batch:
    image: clea-batch:latest
    build: clea-batch
    environment:
      SPRING_PROFILES_ACTIVE: docker
      BUCKET_OUTSCALE: clea-batch
      ENDPOINT_OUTSCALE: http://minio:9000
      BUCKET_SCALEWAY: clea-batch-scaleway
      ENDPOINT_SCALEWAY: http://minio:9000
      CLEA_BATCH_LOG_FILE_PATH: /logs
      CLEA_BATCH_LOG_FILE_NAME: clea-batch
    depends_on:
      - postgres

  clea-dbmigration:
    image: flyway/flyway:7.8
    command: migrate -connectRetries=60
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres/cleadb
      FLYWAY_USER: postgres
      FLYWAY_PASSWORD: password
    volumes:
      - ./clea-dbmigration/src/main/resources/db/migrations:/flyway/sql
    depends_on:
      - postgres

  kafka:
    image: "wurstmeister/kafka:latest"
    environment:
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  minio:
    image: minio/minio:edge
    environment:
      MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
      MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    entrypoint: sh
    command: -c 'mkdir -p /data/clea-batch /data/clea-batch-scaleway && /usr/bin/minio server /data'
    ports:
      - "9000:9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafdrop:
    image: "obsidiandynamics/kafdrop:latest"
    environment:
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
      KAFKA_BROKERCONNECT: "kafka:29092"
      SERVER_SERVLET_CONTEXTPATH: "/kafdrop"
    depends_on:
      - kafka
    ports:
      - "9100:9000"

  postgres:
    image: "postgres:latest"
    environment:
      POSTGRES_DB: cleadb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - "./docker-compose/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"

  pgadmin:
    image: "dpage/pgadmin4:latest"
    environment:
      PGADMIN_DEFAULT_EMAIL: user@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    depends_on:
      - postgres
    ports:
      - "8081:80"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=elasticsearch
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=password
      - xpack.security.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /usr/share/elasticsearch/data/
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: password
    depends_on:
      - elasticsearch
